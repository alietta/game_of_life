document.querySelector('mutation-test-report-app').report = {"files":{"/Users/tatiana/study/game_of_life/src/modules/App/duck/reducer.test.ts":{"language":"typescript","mutants":[{"id":"1","location":{"end":{"column":2,"line":22},"start":{"column":32,"line":3}},"mutatorName":"BlockStatement","replacement":"{}","status":"RuntimeError"},{"id":"0","location":{"end":{"column":24,"line":3},"start":{"column":10,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3","location":{"end":{"column":4,"line":12},"start":{"column":25,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"2","location":{"end":{"column":17,"line":4},"start":{"column":6,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"9","location":{"end":{"column":47,"line":11},"start":{"column":38,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"8","location":{"end":{"column":66,"line":11},"start":{"column":28,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"5","location":{"end":{"column":24,"line":6},"start":{"column":15,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"4","location":{"end":{"column":6,"line":8},"start":{"column":19,"line":5}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"10","location":{"end":{"column":64,"line":11},"start":{"column":60,"line":11}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Killed"},{"id":"11","location":{"end":{"column":17,"line":13},"start":{"column":6,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"7","location":{"end":{"column":56,"line":9},"start":{"column":47,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"6","location":{"end":{"column":22,"line":7},"start":{"column":18,"line":7}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Killed"},{"id":"12","location":{"end":{"column":4,"line":21},"start":{"column":25,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"13","location":{"end":{"column":6,"line":17},"start":{"column":19,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"14","location":{"end":{"column":24,"line":15},"start":{"column":15,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"15","location":{"end":{"column":22,"line":16},"start":{"column":18,"line":16}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Killed"},{"id":"16","location":{"end":{"column":67,"line":20},"start":{"column":28,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"17","location":{"end":{"column":47,"line":20},"start":{"column":38,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"18","location":{"end":{"column":65,"line":20},"start":{"column":60,"line":20}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed"}],"source":"import { appSlice } from './reducer';\n\ndescribe('App reducers', () => {\n  it('setStatus', () => {\n    const state = {\n      status: 'loading',\n      darkTheme: true,\n    };\n    const action = appSlice.actions.setStatus('success');\n    const result = appSlice.reducer(state, action);\n    expect(result).toEqual({ status: 'success', darkTheme: true });\n  });\n  it('setStatus', () => {\n    const state = {\n      status: 'success',\n      darkTheme: true,\n    };\n    const action = appSlice.actions.switchTheme();\n    const result = appSlice.reducer(state, action);\n    expect(result).toEqual({ status: 'success', darkTheme: false });\n  });\n});\n"},"/Users/tatiana/study/game_of_life/src/modules/Field/canvasFunctions.test.ts":{"language":"typescript","mutants":[{"id":"20","location":{"end":{"column":2,"line":58},"start":{"column":33,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"RuntimeError"},{"id":"21","location":{"end":{"column":4,"line":18},"start":{"column":20,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"19","location":{"end":{"column":25,"line":5},"start":{"column":10,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"22","location":{"end":{"column":6,"line":17},"start":{"column":19,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"23","location":{"end":{"column":28,"line":13},"start":{"column":19,"line":13}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"24","location":{"end":{"column":8,"line":16},"start":{"column":14,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"25","location":{"end":{"column":24,"line":19},"start":{"column":8,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"27","location":{"end":{"column":52,"line":23},"start":{"column":46,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"26","location":{"end":{"column":6,"line":24},"start":{"column":32,"line":19}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"28","location":{"end":{"column":21,"line":25},"start":{"column":8,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"29","location":{"end":{"column":6,"line":48},"start":{"column":29,"line":25}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"30","location":{"end":{"column":8,"line":46},"start":{"column":55,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"31","location":{"end":{"column":19,"line":49},"start":{"column":8,"line":49}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"32","location":{"end":{"column":6,"line":57},"start":{"column":27,"line":49}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"33","location":{"end":{"column":54,"line":53},"start":{"column":21,"line":53}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"34","location":{"end":{"column":31,"line":53},"start":{"column":22,"line":53}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"35","location":{"end":{"column":42,"line":53},"start":{"column":33,"line":53}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"36","location":{"end":{"column":53,"line":53},"start":{"column":44,"line":53}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"}],"source":"import 'jest-canvas-mock';\n\nimport { canvasSettings, getDrawData, drawCells } from './canvasFunctions';\n\ndescribe('Canvas Helper', () => {\n  let ctx: CanvasRenderingContext2D;\n  beforeEach(() => {\n    ctx = new window.CanvasRenderingContext2D();\n    // eslint-disable-next-line\n    ctx._canvas = {\n      width: 100,\n      height: 100,\n      getContext: () => ctx,\n      style: {\n        width: 0,\n      },\n    };\n  });\n    it('canvasSettings', () => {\n      canvasSettings(ctx.canvas, 1000);\n      expect(ctx.canvas.width).toEqual(2000);\n      expect(ctx.canvas.height).toEqual(2000);\n      expect(ctx.canvas.style.width).toEqual('100%');\n    });\n    it('getDrawData', () => {\n      canvasSettings(ctx.canvas, 1000);\n      const data = getDrawData(ctx.canvas, 10);\n      // eslint-disable-next-line\n      expect(ctx.__getEvents()).toMatchInlineSnapshot(`\n        Array [\n          Object {\n            \"props\": Object {\n              \"value\": false,\n            },\n            \"transform\": Array [\n              1,\n              0,\n              0,\n              1,\n              0,\n              0,\n            ],\n            \"type\": \"imageSmoothingEnabled\",\n          },\n        ]\n      `);\n      expect(data).toMatchSnapshot();\n    });\n    it('drawCells', () => {\n      const cellSize = 10;\n      canvasSettings(ctx.canvas, 1000);\n      const data = getDrawData(ctx.canvas, cellSize);\n      const cells = [[0, 0, 1], [0, 4, 5], [7, 0, 8]];\n      drawCells(cells, cellSize, data);\n      // eslint-disable-next-line\n      expect(ctx.__getEvents()).toMatchSnapshot();\n    });\n});\n"},"/Users/tatiana/study/game_of_life/src/modules/Field/helper.test.ts":{"language":"typescript","mutants":[{"id":"38","location":{"end":{"column":2,"line":121},"start":{"column":36,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"RuntimeError"},{"id":"37","location":{"end":{"column":28,"line":11},"start":{"column":10,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"39","location":{"end":{"column":36,"line":12},"start":{"column":12,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"40","location":{"end":{"column":4,"line":16},"start":{"column":44,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"41","location":{"end":{"column":37,"line":13},"start":{"column":8,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"42","location":{"end":{"column":6,"line":15},"start":{"column":45,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"43","location":{"end":{"column":49,"line":14},"start":{"column":40,"line":14}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"44","location":{"end":{"column":26,"line":17},"start":{"column":12,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"45","location":{"end":{"column":4,"line":24},"start":{"column":34,"line":17}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"46","location":{"end":{"column":27,"line":18},"start":{"column":8,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"47","location":{"end":{"column":6,"line":20},"start":{"column":35,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"48","location":{"end":{"column":48,"line":19},"start":{"column":27,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"49","location":{"end":{"column":73,"line":19},"start":{"column":59,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"50","location":{"end":{"column":27,"line":21},"start":{"column":8,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"51","location":{"end":{"column":6,"line":23},"start":{"column":35,"line":21}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"52","location":{"end":{"column":48,"line":22},"start":{"column":27,"line":22}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"53","location":{"end":{"column":73,"line":22},"start":{"column":59,"line":22}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"54","location":{"end":{"column":29,"line":25},"start":{"column":12,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"55","location":{"end":{"column":4,"line":36},"start":{"column":37,"line":25}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"56","location":{"end":{"column":33,"line":26},"start":{"column":8,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"57","location":{"end":{"column":6,"line":30},"start":{"column":41,"line":26}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"58","location":{"end":{"column":33,"line":31},"start":{"column":8,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"59","location":{"end":{"column":6,"line":35},"start":{"column":41,"line":31}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"60","location":{"end":{"column":23,"line":37},"start":{"column":12,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"61","location":{"end":{"column":4,"line":60},"start":{"column":31,"line":37}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"62","location":{"end":{"column":39,"line":38},"start":{"column":8,"line":38}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"63","location":{"end":{"column":6,"line":44},"start":{"column":47,"line":38}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"64","location":{"end":{"column":43,"line":39},"start":{"column":37,"line":39}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"65","location":{"end":{"column":8,"line":43},"start":{"column":29,"line":40}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"66","location":{"end":{"column":15,"line":41},"start":{"column":9,"line":41}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"67","location":{"end":{"column":15,"line":42},"start":{"column":9,"line":42}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"68","location":{"end":{"column":36,"line":45},"start":{"column":8,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"69","location":{"end":{"column":6,"line":59},"start":{"column":44,"line":45}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"71","location":{"end":{"column":10,"line":53},"start":{"column":9,"line":50}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"70","location":{"end":{"column":15,"line":49},"start":{"column":9,"line":49}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"72","location":{"end":{"column":17,"line":51},"start":{"column":11,"line":51}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"73","location":{"end":{"column":17,"line":52},"start":{"column":11,"line":52}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"74","location":{"end":{"column":8,"line":58},"start":{"column":29,"line":55}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"75","location":{"end":{"column":15,"line":56},"start":{"column":9,"line":56}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"77","location":{"end":{"column":27,"line":61},"start":{"column":12,"line":61}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"78","location":{"end":{"column":4,"line":82},"start":{"column":35,"line":61}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"76","location":{"end":{"column":15,"line":57},"start":{"column":9,"line":57}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"79","location":{"end":{"column":6,"line":69},"start":{"column":22,"line":63}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"80","location":{"end":{"column":8,"line":68},"start":{"column":15,"line":64}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"81","location":{"end":{"column":18,"line":65},"start":{"column":9,"line":65}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"82","location":{"end":{"column":18,"line":66},"start":{"column":9,"line":66}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"83","location":{"end":{"column":18,"line":67},"start":{"column":9,"line":67}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"84","location":{"end":{"column":26,"line":70},"start":{"column":8,"line":70}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"87","location":{"end":{"column":6,"line":77},"start":{"column":34,"line":74}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"85","location":{"end":{"column":6,"line":73},"start":{"column":34,"line":70}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"86","location":{"end":{"column":26,"line":74},"start":{"column":8,"line":74}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"88","location":{"end":{"column":26,"line":78},"start":{"column":8,"line":78}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"89","location":{"end":{"column":6,"line":81},"start":{"column":34,"line":78}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"90","location":{"end":{"column":27,"line":83},"start":{"column":12,"line":83}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"92","location":{"end":{"column":32,"line":84},"start":{"column":8,"line":84}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"91","location":{"end":{"column":4,"line":120},"start":{"column":35,"line":83}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"95","location":{"end":{"column":18,"line":86},"start":{"column":9,"line":86}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"93","location":{"end":{"column":6,"line":95},"start":{"column":40,"line":84}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"94","location":{"end":{"column":8,"line":89},"start":{"column":19,"line":85}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"96","location":{"end":{"column":18,"line":87},"start":{"column":9,"line":87}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"98","location":{"end":{"column":8,"line":94},"start":{"column":42,"line":90}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"97","location":{"end":{"column":18,"line":88},"start":{"column":9,"line":88}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"99","location":{"end":{"column":18,"line":91},"start":{"column":9,"line":91}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"100","location":{"end":{"column":18,"line":92},"start":{"column":9,"line":92}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"102","location":{"end":{"column":32,"line":96},"start":{"column":8,"line":96}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"101","location":{"end":{"column":18,"line":93},"start":{"column":9,"line":93}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"103","location":{"end":{"column":6,"line":107},"start":{"column":40,"line":96}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"104","location":{"end":{"column":8,"line":101},"start":{"column":19,"line":97}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"105","location":{"end":{"column":18,"line":98},"start":{"column":9,"line":98}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"106","location":{"end":{"column":18,"line":99},"start":{"column":9,"line":99}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"107","location":{"end":{"column":18,"line":100},"start":{"column":9,"line":100}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"108","location":{"end":{"column":8,"line":106},"start":{"column":42,"line":102}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"109","location":{"end":{"column":18,"line":103},"start":{"column":9,"line":103}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"110","location":{"end":{"column":18,"line":104},"start":{"column":9,"line":104}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"111","location":{"end":{"column":18,"line":105},"start":{"column":9,"line":105}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"112","location":{"end":{"column":32,"line":108},"start":{"column":8,"line":108}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"113","location":{"end":{"column":6,"line":119},"start":{"column":40,"line":108}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"114","location":{"end":{"column":8,"line":113},"start":{"column":19,"line":109}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"115","location":{"end":{"column":18,"line":110},"start":{"column":9,"line":110}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"117","location":{"end":{"column":18,"line":112},"start":{"column":9,"line":112}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"116","location":{"end":{"column":18,"line":111},"start":{"column":9,"line":111}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"119","location":{"end":{"column":18,"line":115},"start":{"column":9,"line":115}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"118","location":{"end":{"column":8,"line":118},"start":{"column":42,"line":114}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"120","location":{"end":{"column":18,"line":116},"start":{"column":9,"line":116}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"121","location":{"end":{"column":18,"line":117},"start":{"column":9,"line":117}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"}],"source":"import { uniq } from 'ramda';\nimport {\n  randomByPercent,\n  makeFieldPos,\n  randomIntWithoutRepeat,\n  makeField,\n  checkNeighbor,\n  getGeneration\n} from './helper';\n\ndescribe('Helper functions', () => {\n  describe('randomIntWithoutRepeat', () => {\n    it('test randomIntWithoutRepeat', () => {\n      expect(randomIntWithoutRepeat(3, [2, 3, 0])).toEqual(1);\n    });\n  });\n  describe('makeFieldPos', () => {\n    it('test makeFieldPos', () => {\n      expect(makeFieldPos({ cell: 7, width: 3 })).toEqual({ x: 1, y: 2 });\n    });\n    it('test makeFieldPos', () => {\n      expect(makeFieldPos({ cell: 8, width: 3 })).toEqual({ x: 2, y: 2 });\n    });\n  });\n  describe('randomByPercent', () => {\n    it('test randomByPercent 50', () => {\n      const randArray = randomByPercent(4, 4, 50);\n      expect(randArray.length).toEqual(8);\n      expect(uniq(randArray)).toEqual(randArray);\n    });\n    it('test randomByPercent 25', () => {\n      const randArray = randomByPercent(4, 4, 25);\n      expect(randArray.length).toEqual(4);\n      expect(uniq(randArray)).toEqual(randArray);\n    });\n  });\n  describe('makeField', () => {\n    it('test makeField without update', () => {\n      const field = makeField(2, 2, [0, 3]);\n      expect(field).toEqual([\n        [1, 0],\n        [0, 1],\n      ]);\n    });\n    it('test makeField with update', () => {\n      const field = makeField(\n        2,\n        2,\n        [1, 3],\n        [\n          [1, 0],\n          [0, 1],\n        ]\n      );\n      expect(field).toEqual([\n        [0, 1],\n        [0, 2],\n      ]);\n    });\n  });\n  describe('checkNeighbor', () => {\n    let field;\n    beforeEach(() => {\n      field = [\n        [0, 1, 1],\n        [1, 1, 0],\n        [0, 1, 0],\n      ];\n    });\n    it('checkNeighbor #1', () => {\n      const neighbor = checkNeighbor(field, 0, 0);\n      expect(neighbor).toEqual(3);\n    });\n    it('checkNeighbor #2', () => {\n      const neighbor = checkNeighbor(field, 1, 1);\n      expect(neighbor).toEqual(4);\n    });\n    it('checkNeighbor #3', () => {\n      const neighbor = checkNeighbor(field, 0, 2);\n      expect(neighbor).toEqual(3);\n    });\n  });\n  describe('getGeneration', () => {\n    it('getGeneration figure 1', () => {\n      const arr = [\n        [0, 1, 0],\n        [0, 1, 0],\n        [0, 1, 0],\n      ];\n      expect(getGeneration(arr)).toEqual([\n        [0, 0, 0],\n        [1, 2, 1],\n        [0, 0, 0],\n      ]);\n    });\n    it('getGeneration figure 2', () => {\n      const arr = [\n        [1, 1, 0],\n        [1, 1, 0],\n        [0, 0, 0],\n      ];\n      expect(getGeneration(arr)).toEqual([\n        [2, 2, 0],\n        [2, 2, 0],\n        [0, 0, 0],\n      ]);\n    });\n    it('getGeneration figure 3', () => {\n      const arr = [\n        [0, 0, 0],\n        [1, 1, 0],\n        [0, 0, 0],\n      ];\n      expect(getGeneration(arr)).toEqual([\n        [0, 0, 0],\n        [0, 0, 0],\n        [0, 0, 0],\n      ]);\n    });\n  });\n});\n"},"/Users/tatiana/study/game_of_life/src/modules/Login/duck/api.test.ts":{"language":"typescript","mutants":[{"id":"123","location":{"end":{"column":2,"line":31},"start":{"column":34,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"RuntimeError"},{"id":"125","location":{"end":{"column":4,"line":10},"start":{"column":27,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"126","location":{"end":{"column":67,"line":7},"start":{"column":58,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"122","location":{"end":{"column":26,"line":4},"start":{"column":10,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"127","location":{"end":{"column":20,"line":8},"start":{"column":17,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"124","location":{"end":{"column":13,"line":5},"start":{"column":6,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"128","location":{"end":{"column":44,"line":9},"start":{"column":37,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"129","location":{"end":{"column":49,"line":9},"start":{"column":46,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"130","location":{"end":{"column":14,"line":11},"start":{"column":6,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"131","location":{"end":{"column":4,"line":16},"start":{"column":28,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"132","location":{"end":{"column":70,"line":13},"start":{"column":58,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"135","location":{"end":{"column":4,"line":23},"start":{"column":33,"line":17}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"136","location":{"end":{"column":67,"line":19},"start":{"column":58,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"133","location":{"end":{"column":44,"line":15},"start":{"column":37,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"134","location":{"end":{"column":19,"line":17},"start":{"column":6,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"138","location":{"end":{"column":28,"line":22},"start":{"column":26,"line":22}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"137","location":{"end":{"column":44,"line":21},"start":{"column":37,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"140","location":{"end":{"column":4,"line":30},"start":{"column":32,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"139","location":{"end":{"column":18,"line":24},"start":{"column":6,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"141","location":{"end":{"column":67,"line":26},"start":{"column":58,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"142","location":{"end":{"column":44,"line":28},"start":{"column":37,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"143","location":{"end":{"column":33,"line":29},"start":{"column":28,"line":29}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed"}],"source":"import { login, logout, getUserName, isLoggedIn } from './api';\n\n\ndescribe('test login api', () => {\n  it('login', async () => {\n    // eslint-disable-next-line\n    const sp = jest.spyOn(window.localStorage.__proto__, 'setItem');\n    await login('a');\n    expect(sp).toHaveBeenCalledWith('login', 'a');\n  });\n  it('logout', async () => {\n    // eslint-disable-next-line\n    const sp = jest.spyOn(window.localStorage.__proto__, 'removeItem');\n    await logout();\n    expect(sp).toHaveBeenCalledWith('login');\n  });\n  it('getUserName', async () => {\n    // eslint-disable-next-line\n    const sp = jest.spyOn(window.localStorage.__proto__, 'getItem');\n    const name = await getUserName();\n    expect(sp).toHaveBeenCalledWith('login');\n    expect(name).toEqual('');\n  });\n  it('isLoggedIn', async () => {\n    // eslint-disable-next-line\n    const sp = jest.spyOn(window.localStorage.__proto__, 'getItem');\n    const isAuth = await isLoggedIn();\n    expect(sp).toHaveBeenCalledWith('login');\n    expect(isAuth).toEqual(false);\n  });\n});\n\n"},"/Users/tatiana/study/game_of_life/src/modules/Login/duck/saga.test.ts":{"language":"typescript","mutants":[{"id":"144","location":{"end":{"column":22,"line":9},"start":{"column":10,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"145","location":{"end":{"column":2,"line":96},"start":{"column":30,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"RuntimeError"},{"id":"146","location":{"end":{"column":23,"line":10},"start":{"column":6,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"147","location":{"end":{"column":4,"line":26},"start":{"column":31,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"148","location":{"end":{"column":48,"line":13},"start":{"column":39,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"150","location":{"end":{"column":45,"line":15},"start":{"column":9,"line":15}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"149","location":{"end":{"column":8,"line":17},"start":{"column":16,"line":14}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"151","location":{"end":{"column":44,"line":15},"start":{"column":40,"line":15}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Killed"},{"id":"152","location":{"end":{"column":49,"line":16},"start":{"column":9,"line":16}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"153","location":{"end":{"column":48,"line":16},"start":{"column":41,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"154","location":{"end":{"column":40,"line":18},"start":{"column":33,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"155","location":{"end":{"column":48,"line":19},"start":{"column":39,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"156","location":{"end":{"column":8,"line":24},"start":{"column":22,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"157","location":{"end":{"column":26,"line":21},"start":{"column":17,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"158","location":{"end":{"column":21,"line":22},"start":{"column":17,"line":22}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Killed"},{"id":"160","location":{"end":{"column":24,"line":27},"start":{"column":6,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"159","location":{"end":{"column":22,"line":23},"start":{"column":15,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"161","location":{"end":{"column":4,"line":43},"start":{"column":32,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"162","location":{"end":{"column":48,"line":30},"start":{"column":39,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"165","location":{"end":{"column":45,"line":32},"start":{"column":40,"line":32}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed"},{"id":"163","location":{"end":{"column":8,"line":34},"start":{"column":16,"line":31}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"164","location":{"end":{"column":46,"line":32},"start":{"column":9,"line":32}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"167","location":{"end":{"column":48,"line":36},"start":{"column":39,"line":36}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"166","location":{"end":{"column":46,"line":33},"start":{"column":9,"line":33}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"168","location":{"end":{"column":8,"line":41},"start":{"column":22,"line":37}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"169","location":{"end":{"column":26,"line":38},"start":{"column":17,"line":38}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"170","location":{"end":{"column":22,"line":39},"start":{"column":17,"line":39}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed"},{"id":"172","location":{"end":{"column":28,"line":44},"start":{"column":6,"line":44}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"171","location":{"end":{"column":17,"line":40},"start":{"column":15,"line":40}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"173","location":{"end":{"column":4,"line":56},"start":{"column":36,"line":44}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"175","location":{"end":{"column":50,"line":48},"start":{"column":17,"line":48}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"176","location":{"end":{"column":49,"line":48},"start":{"column":44,"line":48}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"177","location":{"end":{"column":8,"line":54},"start":{"column":22,"line":50}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"174","location":{"end":{"column":51,"line":48},"start":{"column":16,"line":48}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"178","location":{"end":{"column":26,"line":51},"start":{"column":17,"line":51}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"179","location":{"end":{"column":22,"line":52},"start":{"column":17,"line":52}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed"},{"id":"180","location":{"end":{"column":17,"line":53},"start":{"column":15,"line":53}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"181","location":{"end":{"column":27,"line":57},"start":{"column":6,"line":57}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"182","location":{"end":{"column":4,"line":69},"start":{"column":35,"line":57}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"185","location":{"end":{"column":72,"line":61},"start":{"column":65,"line":61}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"184","location":{"end":{"column":75,"line":61},"start":{"column":17,"line":61}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"183","location":{"end":{"column":76,"line":61},"start":{"column":16,"line":61}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"186","location":{"end":{"column":8,"line":67},"start":{"column":22,"line":63}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"187","location":{"end":{"column":24,"line":64},"start":{"column":17,"line":64}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"188","location":{"end":{"column":22,"line":65},"start":{"column":17,"line":65}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed"},{"id":"189","location":{"end":{"column":17,"line":66},"start":{"column":15,"line":66}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"190","location":{"end":{"column":27,"line":70},"start":{"column":6,"line":70}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"193","location":{"end":{"column":54,"line":71},"start":{"column":47,"line":71}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"191","location":{"end":{"column":4,"line":82},"start":{"column":35,"line":70}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"192","location":{"end":{"column":56,"line":71},"start":{"column":36,"line":71}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"194","location":{"end":{"column":52,"line":74},"start":{"column":16,"line":74}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"197","location":{"end":{"column":40,"line":75},"start":{"column":33,"line":75}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"195","location":{"end":{"column":51,"line":74},"start":{"column":17,"line":74}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"196","location":{"end":{"column":50,"line":74},"start":{"column":43,"line":74}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"199","location":{"end":{"column":26,"line":77},"start":{"column":17,"line":77}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"198","location":{"end":{"column":8,"line":80},"start":{"column":22,"line":76}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"200","location":{"end":{"column":21,"line":78},"start":{"column":17,"line":78}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Killed"},{"id":"201","location":{"end":{"column":22,"line":79},"start":{"column":15,"line":79}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"202","location":{"end":{"column":26,"line":83},"start":{"column":6,"line":83}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"204","location":{"end":{"column":56,"line":84},"start":{"column":36,"line":84}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"205","location":{"end":{"column":54,"line":84},"start":{"column":47,"line":84}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"203","location":{"end":{"column":4,"line":95},"start":{"column":34,"line":83}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"207","location":{"end":{"column":74,"line":87},"start":{"column":17,"line":87}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"208","location":{"end":{"column":71,"line":87},"start":{"column":64,"line":87}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"209","location":{"end":{"column":8,"line":93},"start":{"column":22,"line":89}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"206","location":{"end":{"column":75,"line":87},"start":{"column":16,"line":87}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"210","location":{"end":{"column":24,"line":90},"start":{"column":17,"line":90}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"211","location":{"end":{"column":22,"line":91},"start":{"column":17,"line":91}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed"},{"id":"212","location":{"end":{"column":17,"line":92},"start":{"column":15,"line":92}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"}],"source":"import { expectSaga } from 'redux-saga-test-plan';\nimport * as matchers from 'redux-saga-test-plan/matchers';\nimport { throwError } from 'redux-saga-test-plan/providers';\nimport { appSlice } from '@/modules/App/duck/reducer';\nimport { checkUserWorker, logoutWorker, loginWorker } from './saga';\nimport { actions, reducer } from './reducer';\nimport { isLoggedIn, getUserName, login, logout } from './api';\n\ndescribe('Login saga', () => {\n  it('checkUser login', () => {\n    return expectSaga(checkUserWorker)\n      .withReducer(reducer)\n      .put(appSlice.actions.setStatus('loading'))\n      .provide([\n        [matchers.call.fn(isLoggedIn), true],\n        [matchers.call.fn(getUserName), 'Helen'],\n      ])\n      .put(actions.loginSuccess('Helen'))\n      .put(appSlice.actions.setStatus('success'))\n      .hasFinalState({\n        status: 'success',\n        isAuth: true,\n        name: 'Helen',\n      })\n      .run();\n  });\n  it('checkUser logout', () => {\n    return expectSaga(checkUserWorker)\n      .withReducer(reducer)\n      .put(appSlice.actions.setStatus('loading'))\n      .provide([\n        [matchers.call.fn(isLoggedIn), false],\n        [matchers.call.fn(getUserName), null],\n      ])\n      .put(actions.logoutSuccess())\n      .put(appSlice.actions.setStatus('success'))\n      .hasFinalState({\n        status: 'success',\n        isAuth: false,\n        name: '',\n      })\n      .run();\n  });\n  it('logoutWorker success', () => {\n    return expectSaga(logoutWorker)\n      .withReducer(reducer)\n      .put(actions.logoutLoading())\n      .provide([[matchers.call.fn(logout), false]])\n      .put(actions.logoutSuccess())\n      .hasFinalState({\n        status: 'success',\n        isAuth: false,\n        name: '',\n      })\n      .run();\n  });\n  it('logoutWorker failed', () => {\n    return expectSaga(logoutWorker)\n      .withReducer(reducer)\n      .put(actions.logoutLoading())\n      .provide([[matchers.call.fn(logout), throwError(new Error('error'))]])\n      .put(actions.logoutError())\n      .hasFinalState({\n        status: 'error',\n        isAuth: false,\n        name: '',\n      })\n      .run();\n  });\n  it('loginWorker success', () => {\n    return expectSaga(loginWorker, { payload: 'Helen' })\n      .withReducer(reducer)\n      .put(actions.loginLoading())\n      .provide([[matchers.call.fn(login), 'Helen']])\n      .put(actions.loginSuccess('Helen'))\n      .hasFinalState({\n        status: 'success',\n        isAuth: true,\n        name: 'Helen',\n      })\n      .run();\n  });\n  it('loginWorker failed', () => {\n    return expectSaga(loginWorker, { payload: 'Helen' })\n      .withReducer(reducer)\n      .put(actions.loginLoading())\n      .provide([[matchers.call.fn(login), throwError(new Error('error'))]])\n      .put(actions.loginError())\n      .hasFinalState({\n        status: 'error',\n        isAuth: false,\n        name: '',\n      })\n      .run();\n  });\n});\n"},"/Users/tatiana/study/game_of_life/src/utils/delay.test.ts":{"language":"typescript","mutants":[{"id":"213","location":{"end":{"column":22,"line":5},"start":{"column":10,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"214","location":{"end":{"column":2,"line":16},"start":{"column":30,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"RuntimeError"},{"id":"215","location":{"end":{"column":17,"line":6},"start":{"column":6,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"217","location":{"end":{"column":17,"line":11},"start":{"column":6,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"216","location":{"end":{"column":4,"line":10},"start":{"column":25,"line":6}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"218","location":{"end":{"column":4,"line":15},"start":{"column":25,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { delay } from './delay';\n\njest.useFakeTimers();\n\ndescribe('test delay', () => {\n  it('delay 100', () => {\n    delay(100);\n    expect(setTimeout).toHaveBeenCalledTimes(1);\n    expect(setTimeout).toHaveBeenLastCalledWith(expect.any(Function), 100);\n  });\n  it('delay 500', () => {\n    delay(500);\n    expect(setTimeout).toHaveBeenCalledTimes(1);\n    expect(setTimeout).toHaveBeenLastCalledWith(expect.any(Function), 500);\n  });\n});\n"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null}};